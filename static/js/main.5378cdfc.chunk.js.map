{"version":3,"sources":["components/AddCharacter.js","components/Trash.js","components/ConfirmDel.js","components/EditStoryline.js","components/Storyline.js","components/CharInfoDisplay.js","components/EditCharacter.js","components/CharactersOverview.js","components/CustomNav.js","App.js","serviceWorker.js","index.js"],"names":["withMobileDialog","breakpoint","props","fullScreen","addCharOpen","handleClose","setCharactersInfo","charactersInfo","_useState","useState","_useState2","Object","slicedToArray","requiredField","setRequiredField","_useState3","name","born","live","physicalD","characterD","philosophy","abilities","id","shortid","generate","story","_useState4","newChar","setNewChar","onAllChange","event","objectSpread","defineProperty","target","value","react_default","a","createElement","Dialog","open","onClose","maxWidth","aria-labelledby","DialogTitle","DialogContent","Grid","container","spacing","item","xs","sm","TextField","error","label","multiline","onChange","type","required","margin","variant","fullWidth","InputLabelProps","shrink","rows","DialogActions","Button","onClick","allChar","concat","toConsumableArray","color","autoFocus","useStyles","makeStyles","theme","root","cardHeader","padding","list","width","height","backgroundColor","palette","background","paper","overflow","button","not","b","filter","indexOf","title","items","trashOpen","inTrash","setInTrash","setDeleted","classes","checked","setChecked","handleToggle","currentIndex","newChecked","push","splice","handleDelete","updateInTrash","every","handleToggleAll","numberOfChecked","length","DialogContentText","Card","CardHeader","className","avatar","Checkbox","indeterminate","disabled","subheader","Divider","List","dense","map","ListItem","key","role","undefined","ListItemIcon","tabIndex","disableRipple","ListItemText","primary","Fragment","restore","close","ConfirmDel","i","index","confirmDelOpen","setConfirmDelOpen","setCharactersOverview","char","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","ContentProps","aria-describedby","message","action","size","newTrash","c","IconButton","aria-label","Close_default","timelineForm","marginTop","selectStory","border","borderRadius","buttons","editForm","EditStoryline","setEditStoryline","editStoryline","selectChar","selectedStory","setSelectedStory","requiredFields","setRequiredFields","_useState5","_useState6","editStory","setEditStory","handleCancel","oldValues","CustomButton","withStyles","getContrastText","&:hover","Zoom","in","FormControl","InputLabel","htmlFor","Select","input","Input","MenuItem","FormHelperText","direction","justify","md","time","effect","intensity","forEach","isEmpty","values","some","x","s","lineColor","makeColor","newStory","beforeColor","prevEffect","e","nextStory","textAlign","paperhead","fontWeight","paperbody","wordBreak","line","timelineSpacing","spacingLine","position","top","StoryLine","addStoryline","setAddStoryline","newStoryline","setNewStoryline","handleStoryline","EditButton","TimelineButton","Paper","Typography","style","--background-color","--background-start","--background-end","Icon","alignItems","components_EditStoryline","divider","marginBottom","CharInfoDisplay","deleted","lg","Storyline","editCharOpen","setSelectChar","useEffect","chartHeight","CharactersOverview","charactersOverview","storylineChart","storyline","data","labels","datasets","fill","lineTension","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","info","es","options","maintainAspectRatio","tooltips","callbacks","tooltipItem","datasetIndex","toLowerCase","scales","yAxes","ticks","beginAtZero","min","max","display","drawer","breakpoints","up","flexShrink","appBar","marginLeft","menuButton","marginRight","toolbar","mixins","drawerPaper","content","flexGrow","listItem","CustomNav","useTheme","mobileOpen","setMobileOpen","setEditCharOpen","setAddCharOpen","_useState7","_useState8","setTrachOpen","_useState9","_useState10","_useState11","_useState12","_useState13","_useState14","_useState15","_useState16","_useState17","_useState18","_useState19","_useState20","_useState21","_useState22","_useState23","_useState24","handleDrawerToggle","handleAddChar","handleEditCharOpen","handleTrashOpen","allInTrash","handleSelectChar","Tooltip","Delete_default","text","AddCircle_default","CssBaseline","AppBar","Toolbar","edge","Menu_default","noWrap","Hidden","smUp","implementation","Drawer","anchor","ModalProps","keepMounted","xsDown","components_AddCharacter","components_Trash","components_ConfirmDel","components_EditCharacter","components_CharInfoDisplay","components_CharactersOverview","App","components_CustomNav","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5378cdfc.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, withMobileDialog, TextField, Grid } from '@material-ui/core';\r\nimport shortid from 'shortid';\r\n\r\nfunction AddCharacter(props) {\r\n    const { fullScreen, addCharOpen, handleClose, setCharactersInfo, charactersInfo } = props;\r\n    const [requiredField, setRequiredField] = useState(false);\r\n    const [newChar, setNewChar] = useState({\r\n        name: '',\r\n        born: '',\r\n        live: '',\r\n        physicalD: '',\r\n        characterD: '',\r\n        philosophy: '',\r\n        abilities: '',\r\n        id: shortid.generate(),\r\n        story: [],\r\n    });\r\n\r\n    function onAllChange(event) {\r\n        setNewChar({\r\n            ...newChar,\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    function saveChar() {\r\n        const allChar = [...charactersInfo, newChar];\r\n        setCharactersInfo(allChar);\r\n        setNewChar({\r\n            name: '',\r\n            born: '',\r\n            live: '',\r\n            physicalD: '',\r\n            characterD: '',\r\n            philosophy: '',\r\n            abilities: '',\r\n            id: shortid.generate(),\r\n            story: [],\r\n        });\r\n        handleClose();\r\n        setRequiredField(false)\r\n    }\r\n\r\n    function requiredInput() {\r\n        setRequiredField(true)\r\n    }\r\n\r\n    function closeAdd() {\r\n        handleClose();\r\n        setRequiredField(false);\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Dialog\r\n                fullScreen={fullScreen}\r\n                open={addCharOpen}\r\n                onClose={handleClose}\r\n                maxWidth={'md'}\r\n                aria-labelledby=\"responsive-dialog-title\"\r\n            >\r\n                <DialogTitle id=\"responsive-dialog-title\">{\"New Character\"}</DialogTitle>\r\n                <DialogContent>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12} sm={4}>\r\n                            {requiredField === true ?\r\n                                <TextField\r\n                                    error\r\n                                    id=\"name-input\"\r\n                                    label=\"Name\"\r\n                                    name=\"name\"\r\n                                    multiline\r\n                                    onChange={onAllChange}\r\n                                    type=\"text\"\r\n                                    required={true}\r\n                                    margin=\"normal\"\r\n                                    variant=\"outlined\"\r\n                                    fullWidth\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                /> :\r\n                                <TextField\r\n                                    id=\"name-input\"\r\n                                    label=\"Name\"\r\n                                    name=\"name\"\r\n                                    multiline\r\n                                    onChange={onAllChange}\r\n                                    type=\"text\"\r\n                                    required={true}\r\n                                    margin=\"normal\"\r\n                                    variant=\"outlined\"\r\n                                    fullWidth\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                />\r\n                            }\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4} >\r\n                            <TextField\r\n                                id=\"born-input\"\r\n                                label=\"Born\"\r\n                                name=\"born\"\r\n                                multiline\r\n                                onChange={onAllChange}\r\n                                type=\"text\"\r\n                                margin=\"normal\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4} >\r\n                            <TextField\r\n                                id=\"outlined-name\"\r\n                                label=\"Live\"\r\n                                name=\"live\"\r\n                                multiline\r\n                                onChange={onAllChange}\r\n                                type=\"text\"\r\n                                margin=\"normal\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6} >\r\n                            <TextField\r\n                                id=\"outlined-multiline-static\"\r\n                                label=\"Physical Description\"\r\n                                name=\"physicalD\"\r\n                                multiline\r\n                                onChange={onAllChange}\r\n                                rows=\"8\"\r\n                                margin=\"normal\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6} >\r\n                            <TextField\r\n                                id=\"outlined-multiline-static\"\r\n                                label=\"Character Description\"\r\n                                name=\"characterD\"\r\n                                multiline\r\n                                onChange={onAllChange}\r\n                                rows=\"8\"\r\n                                margin=\"normal\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6} >\r\n                            <TextField\r\n                                id=\"outlined-multiline-static\"\r\n                                label=\"Philosophy\"\r\n                                name=\"philosophy\"\r\n                                multiline\r\n                                onChange={onAllChange}\r\n                                rows=\"8\"\r\n                                margin=\"normal\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6} >\r\n                            <TextField\r\n                                id=\"outlined-multiline-static\"\r\n                                label=\"Abilities\"\r\n                                name=\"abilities\"\r\n                                multiline\r\n                                onChange={onAllChange}\r\n                                rows=\"8\"\r\n                                margin=\"normal\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={newChar.name === \"\" ? requiredInput : saveChar} color=\"primary\">\r\n                        Save\r\n          </Button>\r\n                    <Button onClick={closeAdd} color=\"primary\" autoFocus>\r\n                        Close\r\n          </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n\r\nAddCharacter.propTypes = {\r\n    fullScreen: PropTypes.bool.isRequired,\r\n    addCharOpen: PropTypes.bool.isRequired,\r\n    handleClose: PropTypes.func.isRequired,\r\n    setCharactersInfo: PropTypes.func.isRequired,\r\n    charactersInfo: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default withMobileDialog({ breakpoint: 'xs' })(AddCharacter);","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Checkbox, Divider, withMobileDialog, List, Card, CardHeader, ListItem, ListItemText, ListItemIcon } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        margin: 'auto',\r\n    },\r\n    cardHeader: {\r\n        padding: theme.spacing(1, 2),\r\n    },\r\n    list: {\r\n        width: 300,\r\n        height: 230,\r\n        backgroundColor: theme.palette.background.paper,\r\n        overflow: 'auto',\r\n    },\r\n    button: {\r\n        margin: theme.spacing(0.5, 0),\r\n    },\r\n}));\r\n\r\nfunction not(a, b) {\r\n    return a.filter(value => b.indexOf(value) === -1);\r\n}\r\n\r\nfunction intersection(a, b) {\r\n    return a.filter(value => b.indexOf(value) !== -1);\r\n}\r\n\r\nfunction union(a, b) {\r\n    return [...a, ...not(b, a)];\r\n}\r\n\r\nfunction Trash(props) {\r\n    const { fullScreen, trashOpen, handleClose, inTrash, setInTrash, setCharactersInfo, charactersInfo, setDeleted } = props;\r\n    const classes = useStyles();\r\n    const [checked, setChecked] = useState([]);\r\n\r\n    const handleToggle = value => () => {\r\n        const currentIndex = checked.indexOf(value);\r\n        const newChecked = [...checked];\r\n\r\n        if (currentIndex === -1) {\r\n            newChecked.push(value);\r\n        } else {\r\n            newChecked.splice(currentIndex, 1);\r\n        }\r\n\r\n        setChecked(newChecked);\r\n    };\r\n\r\n    const handleDelete = () => {\r\n        const updateInTrash = inTrash.filter(a => checked.every(b => a !== b));\r\n        setInTrash(updateInTrash);\r\n        setChecked([]);\r\n    }\r\n\r\n    const handleRestore = () => {\r\n        const restore = [...charactersInfo, ...checked,];\r\n        handleDelete();\r\n        setCharactersInfo(restore);\r\n        setChecked([]);\r\n        setDeleted({});\r\n    }\r\n\r\n    const handleToggleAll = items => () => {\r\n        if (numberOfChecked(items) === items.length) {\r\n            setChecked(not(checked, items));\r\n        } else {\r\n            setChecked(union(checked, items));\r\n        }\r\n    };\r\n\r\n    const numberOfChecked = items => intersection(checked, items).length;\r\n\r\n    const customList = (title, items) => (\r\n        <Card>\r\n            <CardHeader\r\n                className={classes.cardHeader}\r\n                avatar={\r\n                    <Checkbox\r\n                        onClick={handleToggleAll(items)}\r\n                        checked={numberOfChecked(items) === items.length && items.length !== 0}\r\n                        indeterminate={numberOfChecked(items) !== items.length && numberOfChecked(items) !== 0}\r\n                        disabled={items.length === 0}\r\n                    />\r\n                }\r\n                title={title}\r\n                subheader={`${numberOfChecked(items)}/${items.length} selected`}\r\n            />\r\n            <Divider />\r\n            <List className={classes.list} dense>\r\n                {items.map(value => (\r\n                    <ListItem key={inTrash.indexOf(value)} role={undefined} button onClick={handleToggle(value)}>\r\n                        <ListItemIcon>\r\n                            <Checkbox checked={checked.indexOf(value) !== -1} tabIndex={-1} disableRipple />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={value.name} />\r\n                    </ListItem>\r\n                ))}\r\n\r\n                <ListItem />\r\n            </List>\r\n        </Card>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            <Dialog\r\n                fullScreen={fullScreen}\r\n                open={trashOpen}\r\n                onClose={handleClose}\r\n                maxWidth={'lg'}\r\n                aria-labelledby=\"responsive-dialog-title\"\r\n            >\r\n                <DialogTitle id=\"responsive-dialog-title\">{\"Trash\"}</DialogTitle>\r\n                <DialogContent>\r\n                    {inTrash.length === 0 ?\r\n                        <DialogContentText>\r\n                            Trash is empty!\r\n                    </DialogContentText> :\r\n                        customList('Characters', inTrash)\r\n                    }\r\n\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    {inTrash.length === 0 ? null :\r\n                        <>\r\n                            <Button onClick={handleRestore} color=\"primary\">\r\n                                Restore\r\n                    </Button>\r\n                            <Button onClick={handleDelete} color=\"primary\">\r\n                                Delete\r\n                   </Button>\r\n                        </>\r\n                    }\r\n                    <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n                        Close\r\n          </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n\r\nTrash.propTypes = {\r\n    fullScreen: PropTypes.bool.isRequired,\r\n    handleClose: PropTypes.func.isRequired,\r\n    trashOpen: PropTypes.bool.isRequired,\r\n    inTrash: PropTypes.array.isRequired,\r\n    setInTrash: PropTypes.func.isRequired,\r\n    charactersInfo: PropTypes.array.isRequired,\r\n    setCharactersInfo: PropTypes.func.isRequired,\r\n    setDeleted: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withMobileDialog()(Trash);","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Button, Snackbar, IconButton } from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  close: {\r\n    padding: theme.spacing(0.5),\r\n  },\r\n}));\r\n\r\nfunction ConfirmDel(props) {\r\n  const classes = useStyles();\r\n  const { confirmDelOpen, setConfirmDelOpen, inTrash, setInTrash, charactersInfo, setCharactersInfo, setDeleted, setCharactersOverview } = props;\r\n\r\n  function handleClose() {\r\n    setConfirmDelOpen({ open: false, char: { name: '' } })\r\n  }\r\n\r\n  const handleUndo = (i, index) => () => {\r\n    const allChar = [...charactersInfo];\r\n    allChar.splice(index, 0, i);\r\n    setCharactersInfo(allChar);\r\n    const allInTrash = [...inTrash];\r\n    const newTrash = allInTrash.filter(c => c !== i);\r\n    setInTrash(newTrash);\r\n    handleClose();\r\n    setDeleted({});\r\n    setCharactersOverview(false);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'left',\r\n        }}\r\n        open={confirmDelOpen.open}\r\n        autoHideDuration={2000}\r\n        onClose={handleClose}\r\n        ContentProps={{\r\n          'aria-describedby': 'message-id',\r\n        }}\r\n        message={<span id=\"message-id\">Character moved to Trash.</span>}\r\n        action={[\r\n          <Button key=\"undo\" color=\"secondary\" size=\"small\" onClick={handleUndo(confirmDelOpen.char, confirmDelOpen.index)}>\r\n            UNDO\r\n          </Button>,\r\n          <IconButton\r\n            key=\"close\"\r\n            aria-label=\"Close\"\r\n            color=\"inherit\"\r\n            className={classes.close}\r\n            onClick={handleClose}\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>,\r\n        ]}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nConfirmDel.propTypes = {\r\n  confirmDelOpen: PropTypes.object.isRequired,\r\n  setConfirmDelOpen: PropTypes.func.isRequired,\r\n  inTrash: PropTypes.array.isRequired,\r\n  setInTrash: PropTypes.func.isRequired,\r\n  charactersInfo: PropTypes.array.isRequired,\r\n  setCharactersInfo: PropTypes.func.isRequired,\r\n  setDeleted: PropTypes.func.isRequired,\r\n  setCharactersOverview: PropTypes.func.isRequired\r\n}\r\n\r\nexport default ConfirmDel;","import React, { useState } from 'react';\r\nimport { Grid, Button, Zoom, TextField, InputLabel, FormHelperText, FormControl, Select, Input, MenuItem } from '@material-ui/core';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    margin: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    timelineForm: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    selectStory: {\r\n        margin: theme.spacing(3),\r\n        border: '2px solid #ACC8EA',\r\n        borderRadius: '7px',\r\n        padding: '20px',\r\n    },\r\n    buttons: {\r\n        marginTop: theme.spacing(2)\r\n    },\r\n    editForm: {\r\n        width: '100%'\r\n    }\r\n}))\r\n\r\nfunction EditStoryline(props) {\r\n    const { setEditStoryline, editStoryline, selectChar, charactersInfo, setCharactersInfo } = props;\r\n    const classes = useStyles();\r\n    const [selectedStory, setSelectedStory] = useState({ index: '' });\r\n    const [requiredFields, setRequiredFields] = useState(false);\r\n    const [editStory, setEditStory] = useState(false)\r\n\r\n    const handleCancel = () => {\r\n        setEditStoryline(false)\r\n    }\r\n\r\n    const makeColor = (color) => {\r\n        switch (color) {\r\n            case 'Positive':\r\n                return '#9EE09E';\r\n            case 'Negative':\r\n                return '#FF6663';\r\n            case 'Neutral':\r\n                return '#CC99C9';\r\n            default:\r\n                return '#CC99C9';\r\n        }\r\n    }\r\n\r\n    const handleSave = () => {\r\n        let a = 0;\r\n        charactersInfo.forEach(i => i.id === selectChar.id ? a = charactersInfo.indexOf(i) : null);\r\n        const isEmpty = Object.values(editStory).some(x => (x === null || x === ''));\r\n        let s = [...charactersInfo];\r\n        const i = selectedStory.index;\r\n        const lineColor = makeColor(editStory.effect);\r\n        if (charactersInfo[a].story.length === 1 && isEmpty === false) {\r\n            const newStory = { ...editStory, beforeColor: lineColor, color: lineColor };\r\n            s[a].story.splice(i, 1, { ...newStory });\r\n            setCharactersInfo(s);\r\n            handleCancel();\r\n        } else if (charactersInfo[a].story.length > 1 && isEmpty === false && i !== 0) {\r\n            const prevEffect = i - 1;\r\n            if (charactersInfo[a].story.length === i + 1) {\r\n                const newStory = { ...editStory, beforeColor: selectChar.story[prevEffect].color, color: lineColor };\r\n                s[a].story.splice(i, 1, { ...newStory });\r\n                setCharactersInfo(s);\r\n                handleCancel();\r\n            } else {\r\n                const e = i + 1;\r\n                const newStory = { ...editStory, beforeColor: selectChar.story[prevEffect].color, color: lineColor };\r\n                const nextStory = { ...selectChar.story[e], beforeColor: lineColor };\r\n                s[a].story.splice(i, 1, { ...newStory });\r\n                s[a].story.splice(e, 1, { ...nextStory });\r\n                setCharactersInfo(s);\r\n                handleCancel();\r\n            }\r\n        } else if (charactersInfo[a].story.length > 1 && isEmpty === false && i === 0) {\r\n            const e = i + 1;\r\n            const newStory = { ...editStory, beforeColor: lineColor, color: lineColor };\r\n            const nextStory = { ...selectChar.story[e], beforeColor: lineColor };\r\n            s[a].story.splice(i, 1, { ...newStory });\r\n            s[a].story.splice(e, 1, { ...nextStory });\r\n            setCharactersInfo(s);\r\n            handleCancel();\r\n        }\r\n    }\r\n\r\n    const handleEdit = () => {\r\n        if (selectedStory.index === '') {\r\n            setRequiredFields(true)\r\n        } else {\r\n            setEditStory(selectChar.story[selectedStory.index])\r\n        }\r\n    }\r\n\r\n    const onAllChange = (event) => {\r\n        setEditStory(oldValues => ({\r\n            ...oldValues,\r\n            [event.target.name]: event.target.value,\r\n        }));\r\n    }\r\n\r\n    const onSelectStoryChange = (event) => {\r\n        setSelectedStory({\r\n            index: event.target.value\r\n        })\r\n    }\r\n\r\n    const CustomButton = withStyles(theme => ({\r\n        root: {\r\n            color: theme.palette.getContrastText('#88B4E3'),\r\n            backgroundColor: '#88B4E3',\r\n            '&:hover': {\r\n                backgroundColor: '#6595DA',\r\n            },\r\n        },\r\n    }))(Button);\r\n\r\n    return (\r\n        <>\r\n            {editStory === false ?\r\n                <Zoom in={editStoryline}>\r\n                    <div className={classes.selectStory}>\r\n                        <FormControl>\r\n                            <InputLabel htmlFor=\"chooseStory\">Select Story</InputLabel>\r\n                            <Select\r\n                                error={requiredFields}\r\n                                value={selectedStory.index}\r\n                                onChange={onSelectStoryChange}\r\n                                input={<Input name=\"story\" id=\"chooseStory\" />}\r\n                            >\r\n                                <MenuItem value=\"\">\r\n                                    <em>None</em>\r\n                                </MenuItem>\r\n                                {selectChar.story.map((i, index) => <MenuItem key={index} value={index}>{i.title}</MenuItem>)}\r\n                            </Select>\r\n                            <FormHelperText>Choose a story you want to edit</FormHelperText>\r\n                        </FormControl>\r\n                        <Grid container direction=\"row\" justify=\"center\" className={classes.buttons}>\r\n                            <CustomButton variant=\"contained\" onClick={handleEdit} className={classes.margin}>\r\n                                Edit\r\n                    </CustomButton>\r\n                            <CustomButton variant=\"contained\" onClick={handleCancel} className={classes.margin}>\r\n                                Cancel\r\n                    </CustomButton>\r\n                        </Grid>\r\n                    </div>\r\n                </Zoom>\r\n                :\r\n                <Zoom in={editStoryline}>\r\n                    <div className={classes.editForm}>\r\n                        <Grid container spacing={2} className={classes.timelineForm}>\r\n                            <Grid item sm={12} md={8}>\r\n                                <TextField\r\n                                    error={editStory.event === ''}\r\n                                    id=\"outlined-multiline-static\"\r\n                                    label=\"Event\"\r\n                                    name=\"event\"\r\n                                    multiline\r\n                                    value={editStory.event}\r\n                                    onChange={onAllChange}\r\n                                    rows=\"10\"\r\n                                    margin=\"normal\"\r\n                                    variant=\"outlined\"\r\n                                    fullWidth\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item sm={12} md={4}>\r\n                                <Grid item xs={12}>\r\n                                    <TextField\r\n                                        error={editStory.title === ''}\r\n                                        id=\"outlined-multiline-static\"\r\n                                        label=\"Title\"\r\n                                        name=\"title\"\r\n                                        multiline\r\n                                        value={editStory.title}\r\n                                        onChange={onAllChange}\r\n                                        rows=\"1\"\r\n                                        margin=\"normal\"\r\n                                        variant=\"outlined\"\r\n                                        fullWidth\r\n                                        InputLabelProps={{\r\n                                            shrink: true,\r\n                                        }}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <TextField\r\n                                        error={editStory.time === ''}\r\n                                        id=\"outlined-multiline-static\"\r\n                                        label=\"Events Time\"\r\n                                        name=\"time\"\r\n                                        multiline\r\n                                        value={editStory.time}\r\n                                        onChange={onAllChange}\r\n                                        rows=\"1\"\r\n                                        margin=\"normal\"\r\n                                        variant=\"outlined\"\r\n                                        fullWidth\r\n                                        InputLabelProps={{\r\n                                            shrink: true,\r\n                                        }}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <FormControl className={classes.margin}>\r\n                                        <InputLabel htmlFor=\"eff\">Effect</InputLabel>\r\n                                        <Select\r\n                                            error={editStory.effect === ''}\r\n                                            value={editStory.effect}\r\n                                            onChange={onAllChange}\r\n                                            input={<Input name=\"effect\" id=\"eff\" />}\r\n                                        >\r\n                                            <MenuItem value={\"Positive\"}>Positive</MenuItem>\r\n                                            <MenuItem value={\"Negative\"}>Negative</MenuItem>\r\n                                            <MenuItem value={\"Neutral\"}>Neutral</MenuItem>\r\n                                        </Select>\r\n                                        <FormHelperText>How does it affect the character?</FormHelperText>\r\n                                    </FormControl>\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <FormControl className={classes.margin}>\r\n                                        <InputLabel htmlFor=\"inten\">Intensity</InputLabel>\r\n                                        <Select\r\n                                            error={editStory.intensity === ''}\r\n                                            value={editStory.intensity}\r\n                                            onChange={onAllChange}\r\n                                            input={<Input name=\"intensity\" id=\"inten\" />}\r\n                                        >\r\n                                            <MenuItem value={0}>0</MenuItem>\r\n                                            <MenuItem value={1}>1</MenuItem>\r\n                                            <MenuItem value={2}>2</MenuItem>\r\n                                            <MenuItem value={3}>3</MenuItem>\r\n                                            <MenuItem value={4}>4</MenuItem>\r\n                                            <MenuItem value={5}>5</MenuItem>\r\n                                            <MenuItem value={6}>6</MenuItem>\r\n                                            <MenuItem value={7}>7</MenuItem>\r\n                                            <MenuItem value={8}>8</MenuItem>\r\n                                            <MenuItem value={9}>9</MenuItem>\r\n                                            <MenuItem value={10}>10</MenuItem>\r\n                                        </Select>\r\n                                        <FormHelperText>Event intensity</FormHelperText>\r\n                                    </FormControl>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container direction=\"row\" justify=\"center\">\r\n                            <CustomButton variant=\"contained\" onClick={handleSave} className={classes.margin}>\r\n                                Save\r\n                    </CustomButton>\r\n                            <CustomButton variant=\"contained\" onClick={handleCancel} className={classes.margin}>\r\n                                Cancel\r\n                    </CustomButton>\r\n                        </Grid>\r\n                    </div>\r\n                </Zoom>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nEditStoryline.propTypes = {\r\n    setEditStoryline: PropTypes.func.isRequired,\r\n    editStoryline: PropTypes.bool.isRequired,\r\n    selectChar: PropTypes.object.isRequired,\r\n    charactersInfo: PropTypes.array.isRequired,\r\n    setCharactersInfo: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default EditStoryline","import React, { useState } from 'react';\r\nimport { Grid, Paper, Typography, Icon, Button, Zoom, TextField, InputLabel, FormHelperText, FormControl, Select, Input, MenuItem,  } from '@material-ui/core';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport EditStoryline from './EditStoryline';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n        padding: 0,\r\n        textAlign: 'center',\r\n    },\r\n    paperhead: {\r\n        backgroundColor: 'var(--background-color)',\r\n        borderRadius: '7px 7px 0px 0px',\r\n        padding: theme.spacing(1),\r\n        fontWeight: '500',\r\n    },\r\n    paperbody: {\r\n        padding: theme.spacing(1),\r\n        wordBreak: \"break-word\",\r\n    },\r\n    margin: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    line: {\r\n        width: '7px',\r\n        height: '100%',\r\n        margin: '0 auto',\r\n        borderRadius: '7px',\r\n        background: 'linear-gradient(var(--background-start) 1%, 20%, var(--background-end) 80%)',\r\n    },\r\n    timelineForm: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    timelineSpacing: {\r\n        height: theme.spacing(2),\r\n    },\r\n    spacingLine: {\r\n        width: '7px',\r\n        height: '160%',\r\n        position: 'relative',\r\n        top: '-30%',\r\n        margin: '0 auto',\r\n        borderRadius: '7px',\r\n        background: 'var(--background-end)',\r\n    },\r\n}));\r\n\r\nfunction StoryLine(props) {\r\n    const { selectChar, addStoryline, setAddStoryline, newStoryline, setNewStoryline, charactersInfo, setCharactersInfo } = props;\r\n    const classes = useStyles();\r\n    const [requiredField, setRequiredField] = useState(false);\r\n    const [editStoryline, setEditStoryline] = useState(false);\r\n\r\n    const handleStoryline = () => {\r\n        setAddStoryline(true)\r\n    }\r\n\r\n    const handleCancel = () => {\r\n        setNewStoryline({\r\n            event: '',\r\n            time: '',\r\n            effect: '',\r\n            intensity: 0,\r\n            title: '',\r\n        });\r\n        setAddStoryline(false);\r\n        setRequiredField(false)\r\n    }\r\n\r\n    const makeColor = (color) => {\r\n        switch (color) {\r\n            case 'Positive':\r\n                return '#9EE09E';\r\n            case 'Negative':\r\n                return '#FF6663';\r\n            case 'Neutral':\r\n                return '#CC99C9';\r\n            default:\r\n                return '#CC99C9';\r\n        }\r\n    }\r\n\r\n    const handleSave = () => {\r\n        let a = 0;\r\n        charactersInfo.forEach(i => i.id === selectChar.id ? a = charactersInfo.indexOf(i) : null);\r\n        if (charactersInfo[a].story.length === 0) {\r\n            const isEmpty = Object.values(newStoryline).some(x => (x === null || x === ''));\r\n            if (isEmpty === false) {\r\n                let s = [...charactersInfo];\r\n                const lineColor = makeColor(newStoryline.effect);\r\n                const newStory = { ...newStoryline, beforeColor: lineColor, color: lineColor };\r\n                s[a].story.splice(0, 0, { ...newStory });\r\n                setCharactersInfo(s);\r\n                handleCancel();\r\n            } else {\r\n                setRequiredField(newStoryline)\r\n            }\r\n\r\n        } else {\r\n            const isEmpty = Object.values(newStoryline).some(x => (x === null || x === ''));\r\n            if (isEmpty === false) {\r\n                let s = [...charactersInfo];\r\n                let i = charactersInfo[a].story.length;\r\n                const prevEffect = i - 1;\r\n                const lineColor = makeColor(newStoryline.effect);\r\n                const newStory = { ...newStoryline, beforeColor: selectChar.story[prevEffect].color, color: lineColor };\r\n                s[a].story.splice(i, 0, { ...newStory });\r\n                setCharactersInfo(s);\r\n                handleCancel();\r\n            } else {\r\n                setRequiredField(newStoryline)\r\n            }\r\n        }\r\n    }\r\n\r\n    const onAllChange = (event) => {\r\n        setNewStoryline(oldValues => ({\r\n            ...oldValues,\r\n            [event.target.name]: event.target.value,\r\n        }));\r\n    }\r\n\r\n    const handleEditStoryline = () => {\r\n        setEditStoryline(true)\r\n    }\r\n\r\n    const EditButton = withStyles(theme => ({\r\n        root: {\r\n            color: theme.palette.getContrastText('#88B4E3'),\r\n            backgroundColor: '#88B4E3',\r\n            borderRadius: '50%',\r\n            height: '60px',\r\n            margin: theme.spacing(2),\r\n            '&:hover': {\r\n                backgroundColor: '#6595DA',\r\n            },\r\n        },\r\n    }))(Button);\r\n\r\n    const CustomButton = withStyles(theme => ({\r\n        root: {\r\n            color: theme.palette.getContrastText('#88B4E3'),\r\n            backgroundColor: '#88B4E3',\r\n            '&:hover': {\r\n                backgroundColor: '#6595DA',\r\n            },\r\n        },\r\n    }))(Button);\r\n\r\n    const TimelineButton = withStyles(theme => ({\r\n        root: {\r\n            color: theme.palette.getContrastText('#88B4E3'),\r\n            height: '35px',\r\n            backgroundColor: '#88B4E3',\r\n            '&:hover': {\r\n                backgroundColor: '#6595DA',\r\n            },\r\n        },\r\n    }))(Button);\r\n\r\n    return (\r\n        <>\r\n            {selectChar.story.length >= 1 ?\r\n                selectChar.story.map((s, index) =>\r\n                    <Grid container key={index}>\r\n                        <Grid item xs={8}>\r\n                            <Paper className={classes.paper}>\r\n                                <Typography\r\n                                    className={classes.paperhead}\r\n                                    style={\r\n                                        { '--background-color': s.color }\r\n                                    }\r\n                                >\r\n                                    {s.title}\r\n                                </Typography>\r\n                                <Typography className={classes.paperbody}>\r\n                                    {s.event}\r\n                                </Typography>\r\n                            </Paper>\r\n                        </Grid>\r\n                        <Grid item xs={1}>\r\n                            <div\r\n                                className={classes.line}\r\n                                style={\r\n                                    {\r\n                                        '--background-start': s.beforeColor,\r\n                                        '--background-end': s.color,\r\n                                    }\r\n                                }\r\n                            >\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                            <Paper className={classes.paper}>\r\n                                <Typography\r\n                                    className={classes.paperhead}\r\n                                    style={\r\n                                        { '--background-color': s.color }\r\n                                    }\r\n                                >\r\n                                    {s.time}\r\n                                </Typography>\r\n                                <Typography className={classes.paperbody}>\r\n                                    Effect: {s.effect} <br />\r\n                                    Intensity: {s.intensity}\r\n                                </Typography>\r\n                            </Paper>\r\n                        </Grid>\r\n                        <Grid item xs={8} className={classes.timelineSpacing}></Grid>\r\n                        <Grid item xs={1} className={classes.timelineSpacing}>\r\n                            <div\r\n                                className={classes.spacingLine}\r\n                                style={{ '--background-end': s.color }}\r\n                            ></div>\r\n                        </Grid>\r\n                        <Grid item xs={3} className={classes.timelineSpacing}></Grid>\r\n                    </Grid>\r\n                ) :\r\n                null\r\n            }\r\n            {\r\n                addStoryline === false ? null :\r\n                    <Zoom in={addStoryline}>\r\n                        <Grid container spacing={2} className={classes.timelineForm}>\r\n                            <Grid item xs={12} md={8}>\r\n                                <TextField\r\n                                    error={requiredField.event === ''}\r\n                                    id=\"outlined-multiline-static\"\r\n                                    label=\"Event\"\r\n                                    name=\"event\"\r\n                                    multiline\r\n                                    onChange={onAllChange}\r\n                                    rows=\"10\"\r\n                                    margin=\"normal\"\r\n                                    variant=\"outlined\"\r\n                                    fullWidth\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12} md={4}>\r\n                                <Grid item xs={12}>\r\n                                    <TextField\r\n                                        error={requiredField.title === ''}\r\n                                        id=\"outlined-multiline-static\"\r\n                                        label=\"Title\"\r\n                                        name=\"title\"\r\n                                        multiline\r\n                                        onChange={onAllChange}\r\n                                        rows=\"1\"\r\n                                        margin=\"normal\"\r\n                                        variant=\"outlined\"\r\n                                        fullWidth\r\n                                        InputLabelProps={{\r\n                                            shrink: true,\r\n                                        }}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <TextField\r\n                                        error={requiredField.time === ''}\r\n                                        id=\"outlined-multiline-static\"\r\n                                        label=\"Events Time\"\r\n                                        name=\"time\"\r\n                                        multiline\r\n                                        onChange={onAllChange}\r\n                                        rows=\"1\"\r\n                                        margin=\"normal\"\r\n                                        variant=\"outlined\"\r\n                                        fullWidth\r\n                                        InputLabelProps={{\r\n                                            shrink: true,\r\n                                        }}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <FormControl className={classes.margin}>\r\n                                        <InputLabel htmlFor=\"eff\">Effect</InputLabel>\r\n                                        <Select\r\n                                            error={requiredField.effect === ''}\r\n                                            value={newStoryline.effect}\r\n                                            onChange={onAllChange}\r\n                                            input={<Input name=\"effect\" id=\"eff\" />}\r\n                                        >\r\n                                            <MenuItem value={\"Positive\"}>Positive</MenuItem>\r\n                                            <MenuItem value={\"Negative\"}>Negative</MenuItem>\r\n                                            <MenuItem value={\"Neutral\"}>Neutral</MenuItem>\r\n                                        </Select>\r\n                                        <FormHelperText>How does it affect the character?</FormHelperText>\r\n                                    </FormControl>\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <FormControl className={classes.margin}>\r\n                                        <InputLabel htmlFor=\"inten\">Intensity</InputLabel>\r\n                                        <Select\r\n                                            error={requiredField.intensity === ''}\r\n                                            value={newStoryline.intensity}\r\n                                            onChange={onAllChange}\r\n                                            input={<Input name=\"intensity\" id=\"inten\" />}\r\n                                        >\r\n                                            <MenuItem value={0}>0</MenuItem>\r\n                                            <MenuItem value={1}>1</MenuItem>\r\n                                            <MenuItem value={2}>2</MenuItem>\r\n                                            <MenuItem value={3}>3</MenuItem>\r\n                                            <MenuItem value={4}>4</MenuItem>\r\n                                            <MenuItem value={5}>5</MenuItem>\r\n                                            <MenuItem value={6}>6</MenuItem>\r\n                                            <MenuItem value={7}>7</MenuItem>\r\n                                            <MenuItem value={8}>8</MenuItem>\r\n                                            <MenuItem value={9}>9</MenuItem>\r\n                                            <MenuItem value={10}>10</MenuItem>\r\n                                        </Select>\r\n                                        <FormHelperText>Event intensity</FormHelperText>\r\n                                    </FormControl>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Zoom>\r\n            }\r\n\r\n            {\r\n                addStoryline === false && selectChar.story.length === 0 ?\r\n                    <EditButton variant=\"contained\" aria-label=\"Add\" onClick={handleStoryline}>\r\n                        <Icon>edit_icon</Icon>\r\n                    </EditButton>\r\n                    : addStoryline === false && selectChar.story.length >= 1 && editStoryline === false ?\r\n                        <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n                            <EditButton variant=\"contained\" aria-label=\"Add\" onClick={handleStoryline}>\r\n                                <Icon>edit_icon</Icon>\r\n                            </EditButton>\r\n                            <TimelineButton variant=\"contained\" onClick={handleEditStoryline}>\r\n                                Edit Storyline\r\n                        </TimelineButton>\r\n                        </Grid>\r\n                        : addStoryline === false && selectChar.story.length >= 1 && editStoryline === true ?\r\n                            <EditStoryline\r\n                                setEditStoryline={setEditStoryline}\r\n                                editStoryline={editStoryline}\r\n                                selectChar={selectChar}\r\n                                charactersInfo={charactersInfo}\r\n                                setCharactersInfo={setCharactersInfo}\r\n                            />\r\n                            :\r\n                            <Grid container direction=\"row\" justify=\"center\">\r\n                                <CustomButton variant=\"contained\" onClick={handleSave} className={classes.margin}>\r\n                                    Save\r\n                    </CustomButton>\r\n                                <CustomButton variant=\"contained\" onClick={handleCancel} className={classes.margin}>\r\n                                    Cancel\r\n                    </CustomButton>\r\n                            </Grid>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nStoryLine.propTypes= { \r\n    selectChar: PropTypes.object.isRequired,\r\n    addStoryline: PropTypes.bool.isRequired,\r\n    setAddStoryline: PropTypes.func.isRequired,\r\n    newStoryline: PropTypes.object.isRequired,\r\n    setNewStoryline: PropTypes.func.isRequired,\r\n    charactersInfo: PropTypes.array.isRequired,\r\n    setCharactersInfo: PropTypes.func.isRequired,\r\n\r\n}\r\n\r\nexport default StoryLine;","import React from 'react';\r\nimport Storyline from './Storyline';\r\nimport { Grid, Paper } from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n        padding: 0,\r\n        textAlign: 'center',\r\n    },\r\n    paperhead: {\r\n        backgroundColor: '#ACC8EA',\r\n        borderRadius: '7px 7px 0px 0px',\r\n        padding: theme.spacing(1),\r\n        fontWeight: '500'\r\n    },\r\n    paperbody: {\r\n        padding: theme.spacing(1),\r\n        wordBreak: \"break-word\"\r\n    },\r\n    divider: {\r\n        padding: theme.spacing(1),\r\n        backgroundColor: '#ACC8EA',\r\n        width: '100%',\r\n        marginTop: theme.spacing(2),\r\n        marginBottom: theme.spacing(2),\r\n        borderRadius: '7px 7px 0px 0px',\r\n        textAlign: 'center',\r\n    },\r\n}));\r\n\r\nfunction CharInfoDisplay(props) {\r\n    const { selectChar, addStoryline, setAddStoryline, newStoryline, setNewStoryline, charactersInfo, setCharactersInfo, deleted, setCharactersOverview } = props;\r\n    const classes = useStyles();\r\n\r\n    const handleDeleted = () => {\r\n        setCharactersOverview(true)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {selectChar.id === undefined || selectChar === deleted ? handleDeleted()\r\n                :\r\n                <>\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={12} sm={12} md={4}>\r\n                            <Paper className={classes.paper}>\r\n                                <Typography className={classes.paperhead}>\r\n                                    Name:\r\n                                </Typography>\r\n                                <Typography className={classes.paperbody}>\r\n                                    {selectChar.name}\r\n                                </Typography>\r\n                            </Paper>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12} md={4}>\r\n                            <Paper className={classes.paper}>\r\n                                <Typography className={classes.paperhead}>\r\n                                    Born:\r\n                                </Typography>\r\n                                <Typography className={classes.paperbody}>\r\n                                    {selectChar.born}\r\n                                </Typography>\r\n                            </Paper>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12} md={4}>\r\n                            <Paper className={classes.paper}>\r\n                                <Typography className={classes.paperhead}>\r\n                                    Live:\r\n                                </Typography>\r\n                                <Typography className={classes.paperbody}>\r\n                                    {selectChar.live}\r\n                                </Typography>\r\n                            </Paper>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12} md={12} lg={6}>\r\n                            <Paper className={classes.paper}>\r\n                                <Typography className={classes.paperhead}>\r\n                                    Physical Description:\r\n                                </Typography>\r\n                                <Typography className={classes.paperbody}>\r\n                                    {selectChar.physicalD}\r\n                                </Typography>\r\n                            </Paper>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12} md={12} lg={6}>\r\n                            <Paper className={classes.paper}>\r\n                                <Typography className={classes.paperhead}>\r\n                                    Character Description:\r\n                                </Typography>\r\n                                <Typography className={classes.paperbody}>\r\n                                    {selectChar.characterD}\r\n                                </Typography>\r\n                            </Paper>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12} md={12} lg={6}>\r\n                            <Paper className={classes.paper}>\r\n                                <Typography className={classes.paperhead}>\r\n                                    Philosophy:\r\n                                </Typography>\r\n                                <Typography className={classes.paperbody}>\r\n                                    {selectChar.philosophy}\r\n                                </Typography>\r\n                            </Paper>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12} md={12} lg={6}>\r\n                            <Paper className={classes.paper}>\r\n                                <Typography className={classes.paperhead}>\r\n                                    Abilities:\r\n                                </Typography>\r\n                                <Typography className={classes.paperbody}>\r\n                                    {selectChar.abilities}\r\n                                </Typography>\r\n                            </Paper>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container direction=\"column\" alignItems=\"center\" spacing={4}>\r\n                        <Paper className={classes.divider}><h2>Character Storyline</h2></Paper>\r\n                        <Storyline\r\n                            selectChar={selectChar}\r\n                            addStoryline={addStoryline}\r\n                            setAddStoryline={setAddStoryline}\r\n                            newStoryline={newStoryline}\r\n                            setNewStoryline={setNewStoryline}\r\n                            charactersInfo={charactersInfo}\r\n                            setCharactersInfo={setCharactersInfo}\r\n                        />\r\n                    </Grid>\r\n                </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nCharInfoDisplay.propTypes = {\r\n    selectChar: PropTypes.object.isRequired,\r\n    addStoryline: PropTypes.bool.isRequired,\r\n    setAddStoryline: PropTypes.func.isRequired,\r\n    newStoryline: PropTypes.object.isRequired,\r\n    setNewStoryline: PropTypes.func.isRequired,\r\n    charactersInfo: PropTypes.array.isRequired,\r\n    setCharactersInfo: PropTypes.func.isRequired,\r\n    deleted: PropTypes.object.isRequired,\r\n    setCharactersOverview: PropTypes.func.isRequired\r\n}\r\n\r\nexport default CharInfoDisplay;","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, withMobileDialog, TextField, Grid } from '@material-ui/core';\r\nimport shortid from 'shortid';\r\n\r\nfunction EditCharacter(props) {\r\n    const { fullScreen, editCharOpen, handleClose, setCharactersInfo, charactersInfo, setSelectChar } = props;\r\n    const [requiredField, setRequiredField] = useState(false);\r\n    const [newChar, setNewChar] = useState({\r\n        name: '',\r\n        born: '',\r\n        live: '',\r\n        physicalD: '',\r\n        characterD: '',\r\n        philosophy: '',\r\n        abilities: '',\r\n        id: shortid.generate(),\r\n        story: [],\r\n    });\r\n\r\n    useEffect(() => {\r\n        const char = { ...editCharOpen[2] };\r\n        setNewChar(char);\r\n\r\n    }, [editCharOpen])\r\n\r\n    function onAllChange(event) {\r\n        setNewChar({\r\n            ...newChar,\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    function saveChar() {\r\n        const allChar = [...charactersInfo];\r\n        allChar.splice(editCharOpen[1], 1, newChar);\r\n        setCharactersInfo(allChar);\r\n        setSelectChar(newChar)\r\n        setNewChar({\r\n            name: '',\r\n            born: '',\r\n            live: '',\r\n            physicalD: '',\r\n            characterD: '',\r\n            philosophy: '',\r\n            abilities: '',\r\n            id: shortid.generate(),\r\n            story: [],\r\n        });\r\n        handleClose();\r\n        setRequiredField(false);\r\n    }\r\n\r\n    function requiredInput() {\r\n        setRequiredField(true)\r\n    }\r\n\r\n    function closeEdit() {\r\n        handleClose();\r\n        setRequiredField(false);\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Dialog\r\n                fullScreen={fullScreen}\r\n                open={editCharOpen[0]}\r\n                onClose={handleClose}\r\n                maxWidth={'md'}\r\n                aria-labelledby=\"responsive-dialog-title\"\r\n            >\r\n                <DialogTitle id=\"responsive-dialog-title\">{\"Edit Character\"}</DialogTitle>\r\n                <DialogContent>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12} sm={4}>\r\n                            {requiredField === true ?\r\n                                <TextField\r\n                                    error\r\n                                    id=\"name-input\"\r\n                                    label=\"Name\"\r\n                                    name=\"name\"\r\n                                    value={newChar.name}\r\n                                    multiline\r\n                                    onChange={onAllChange}\r\n                                    type=\"text\"\r\n                                    required={true}\r\n                                    margin=\"normal\"\r\n                                    variant=\"outlined\"\r\n                                    fullWidth\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                /> :\r\n                                <TextField\r\n                                    id=\"name-input\"\r\n                                    label=\"Name\"\r\n                                    name=\"name\"\r\n                                    value={newChar.name}\r\n                                    multiline\r\n                                    onChange={onAllChange}\r\n                                    type=\"text\"\r\n                                    required={true}\r\n                                    margin=\"normal\"\r\n                                    variant=\"outlined\"\r\n                                    fullWidth\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                />}\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4} >\r\n                            <TextField\r\n                                id=\"born-input\"\r\n                                label=\"Born\"\r\n                                name=\"born\"\r\n                                multiline\r\n                                value={newChar.born}\r\n                                onChange={onAllChange}\r\n                                type=\"text\"\r\n                                margin=\"normal\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4} >\r\n                            <TextField\r\n                                id=\"outlined-name\"\r\n                                label=\"Live\"\r\n                                name=\"live\"\r\n                                multiline\r\n                                value={newChar.live}\r\n                                onChange={onAllChange}\r\n                                type=\"text\"\r\n                                margin=\"normal\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6} >\r\n                            <TextField\r\n                                id=\"outlined-multiline-static\"\r\n                                label=\"Physical Description\"\r\n                                name=\"physicalD\"\r\n                                multiline\r\n                                value={newChar.physicalD}\r\n                                onChange={onAllChange}\r\n                                rows=\"8\"\r\n                                margin=\"normal\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6} >\r\n                            <TextField\r\n                                id=\"outlined-multiline-static\"\r\n                                label=\"Character Description\"\r\n                                name=\"characterD\"\r\n                                multiline\r\n                                value={newChar.characterD}\r\n                                onChange={onAllChange}\r\n                                rows=\"8\"\r\n                                margin=\"normal\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6} >\r\n                            <TextField\r\n                                id=\"outlined-multiline-static\"\r\n                                label=\"Philosophy\"\r\n                                name=\"philosophy\"\r\n                                multiline\r\n                                value={newChar.philosophy}\r\n                                onChange={onAllChange}\r\n                                rows=\"8\"\r\n                                margin=\"normal\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6} >\r\n                            <TextField\r\n                                id=\"outlined-multiline-static\"\r\n                                label=\"Abilities\"\r\n                                name=\"abilities\"\r\n                                multiline\r\n                                value={newChar.abilities}\r\n                                onChange={onAllChange}\r\n                                rows=\"8\"\r\n                                margin=\"normal\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={newChar.name === \"\" ? requiredInput : saveChar} color=\"primary\">\r\n                        Save\r\n          </Button>\r\n                    <Button onClick={closeEdit} color=\"primary\" autoFocus>\r\n                        Close\r\n          </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n\r\nEditCharacter.propTypes = {\r\n    fullScreen: PropTypes.bool.isRequired,\r\n    editCharOpen: PropTypes.array.isRequired,\r\n    handleClose: PropTypes.func.isRequired,\r\n    charactersInfo: PropTypes.array.isRequired,\r\n    setCharactersInfo: PropTypes.func.isRequired,\r\n    setSelectChar: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withMobileDialog({ breakpoint: 'xs' })(EditCharacter);","import React from 'react'\r\nimport { Grid, Typography, Button } from '@material-ui/core';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    chartHeight: {\r\n        height: '35vh'\r\n    }\r\n}))\r\n\r\nfunction CharactersOverview(props) {\r\n    const { charactersOverview, charactersInfo, setSelectChar, setCharactersOverview } = props;\r\n\r\n    const classes = useStyles();\r\n\r\n    const CustomButton = withStyles(theme => ({\r\n        root: {\r\n            color: theme.palette.getContrastText('#88B4E3'),\r\n            backgroundColor: '#88B4E3',\r\n            '&:hover': {\r\n                backgroundColor: '#6595DA',\r\n            },\r\n        },\r\n    }))(Button);\r\n\r\n    const storylineChart = (storyline) => {\r\n        const chartOptions = {\r\n            maintainAspectRatio: false,\r\n            tooltips: {\r\n                callbacks: {\r\n                    label: function (tooltipItem, data) {\r\n                        let label = 'Event: ' + data.datasets[tooltipItem.datasetIndex].effect[tooltipItem.index].toLowerCase() + ', Intencity: ' + tooltipItem.value || '';\r\n                        return label\r\n                    },\r\n                }\r\n            },\r\n            scales: {\r\n                yAxes: [{\r\n                    ticks: {\r\n                        beginAtZero: true,\r\n                        min: 0,\r\n                        max: 10\r\n                    }\r\n                }]\r\n            }\r\n        }\r\n\r\n        const data = {\r\n            labels: [],\r\n            datasets: [\r\n                {\r\n                    label: 'Storyline intensity',\r\n                    fill: false,\r\n                    lineTension: 0.5,\r\n                    backgroundColor: 'rgba(75,192,192,0.4)',\r\n                    borderColor: '#9EC1CF',\r\n                    borderCapStyle: 'butt',\r\n                    borderDash: [],\r\n                    borderDashOffset: 0.0,\r\n                    borderJoinStyle: 'miter',\r\n                    pointBorderColor: [],\r\n                    pointBackgroundColor: '#fff',\r\n                    pointBorderWidth: 10,\r\n                    pointHoverRadius: 12,\r\n                    pointHoverBackgroundColor: [],\r\n                    pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n                    pointHoverBorderWidth: 2,\r\n                    pointRadius: 1,\r\n                    pointHitRadius: 10,\r\n                    data: [],\r\n                    effect: [],\r\n                }\r\n            ]\r\n        };\r\n\r\n        const info = (i) => {\r\n            data.labels.push(i.title);\r\n            data.datasets[0].data.push(i.intensity);\r\n            data.datasets[0].pointBorderColor.push(i.color);\r\n            data.datasets[0].pointHoverBackgroundColor.push(i.color);\r\n            data.datasets[0].effect.push(i.effect)\r\n        };\r\n\r\n        storyline.map(i => info(i));\r\n\r\n        return <Grid item xs={12} className={classes.chartHeight}>\r\n            <Line data={data} options={chartOptions} />\r\n        </Grid >\r\n    }\r\n\r\n    const handleStoryline = (i) => () => {\r\n        setSelectChar(i);\r\n        setCharactersOverview(false);\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            {charactersOverview === true && charactersInfo.length > 0 ?\r\n                <>\r\n                    {charactersInfo.map((i) =>\r\n                        <Grid container spacing={2} key={i.id}>\r\n                            <Grid item xs={12}>\r\n                                <Typography variant=\"h6\"> {i.name} </Typography>\r\n                            </Grid>\r\n                            {i.story.length === 0 ?\r\n                                <Grid item xs={12}>\r\n                                    <CustomButton onClick={handleStoryline(i)}>Create Storyline</CustomButton>\r\n                                </Grid>\r\n                                :\r\n                                storylineChart(i.story)\r\n                            }\r\n\r\n\r\n                        </Grid>\r\n                    )}\r\n                </>\r\n                : charactersOverview === true && charactersInfo.length === 0 ?\r\n                    <Typography variant=\"h6\">\r\n                        Start planing your book by creating its characters, and story lines!\r\n                    </Typography>\r\n                    : null\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nCharactersOverview.propTypes = {\r\n    charactersOverview: PropTypes.bool.isRequired,\r\n    charactersInfo: PropTypes.array.isRequired,\r\n    setSelectChar: PropTypes.func.isRequired,\r\n    setCharactersOverview: PropTypes.func.isRequired\r\n}\r\n\r\nexport default CharactersOverview;","import React, { useState } from 'react';\r\nimport { AppBar, CssBaseline, Icon, Tooltip, Toolbar, Typography, ListItem, ListItemText, ListItemIcon, Divider, Drawer, Hidden, IconButton, List } from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddCircle from '@material-ui/icons/AddCircle';\r\nimport AddCharacter from './AddCharacter';\r\nimport Trash from './Trash';\r\nimport ConfirmDel from './ConfirmDel';\r\nimport CharInfoDisplay from './CharInfoDisplay';\r\nimport EditCharacter from './EditCharacter';\r\nimport CharactersOverview from './CharactersOverview';\r\n\r\nconst drawerWidth = 250;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    drawer: {\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: drawerWidth,\r\n            flexShrink: 0,\r\n        },\r\n    },\r\n    appBar: {\r\n        marginLeft: drawerWidth,\r\n        backgroundColor: '#2e3136',\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: `calc(100% - ${drawerWidth}px)`,\r\n        },\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'none',\r\n        },\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n        backgroundColor: '#36393e',\r\n        color: 'white',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(4),\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n    },\r\n    listItem: {\r\n        padding: theme.spacing(1),\r\n        wordBreak: \"break-word\"\r\n    },\r\n    divider: {\r\n        backgroundColor: '#fff'\r\n    },\r\n\r\n}));\r\n\r\nfunction CustomNav(props) {\r\n    const { container } = props;\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [mobileOpen, setMobileOpen] = useState(false);\r\n    const [editCharOpen, setEditCharOpen] = useState([false])\r\n    const [addCharOpen, setAddCharOpen] = useState(false);\r\n    const [trashOpen, setTrachOpen] = useState(false);\r\n    const [inTrash, setInTrash] = useState([]);\r\n    const [confirmDelOpen, setConfirmDelOpen] = useState({ open: false, char: { name: '' } });\r\n    const [selectChar, setSelectChar] = useState({});\r\n    const [deleted, setDeleted] = useState({});\r\n    const [addStoryline, setAddStoryline] = useState(false);\r\n    const [charactersOverview, setCharactersOverview] = useState(true);\r\n    const [charactersInfo, setCharactersInfo] = useState([\r\n        {\r\n            abilities: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. In aliquam iaculis ligula, ac bibendum magna tincidunt a. Nullam nec eleifend lectus. Quisque sollicitudin ultrices hendrerit. Etiam molestie nibh id mollis interdum. Donec hendrerit dignissim diam, nec cursus lectus ullamcorper finibus. Maecenas vitae risus lobortis, facilisis turpis vitae, bibendum augue. \",\r\n            born: \"1889-09-16\",\r\n            characterD: \"Phasellus commodo nec felis et lacinia. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Mauris at accumsan dolor. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Vestibulum ultricies ante quis dolor gravida, at auctor leo vestibulum.\",\r\n            id: \"4A7jg2SQZ\",\r\n            live: \"Casterly Rock\",\r\n            name: \"Thyrion Lannister\",\r\n            philosophy: \"Phasellus vehicula dui ac orci porta congue. Etiam gravida sem ut nulla laoreet sagittis. Phasellus tincidunt lorem ut viverra rhoncus. Nullam in neque at elit rhoncus facilisis non quis nunc. Praesent ultricies faucibus nisl. Vivamus porta viverra ligula, et ultrices quam laoreet nec. Integer venenatis nisi non aliquet tempus. Vestibulum justo magna, feugiat id molestie eget, condimentum eu arcu.\",\r\n            physicalD: \"Aenean gravida luctus ipsum, ac congue nulla feugiat et. Phasellus orci diam, eleifend vitae ultricies facilisis, pellentesque eu arcu. Suspendisse congue massa mollis lectus maximus, at sodales eros congue. Sed sed iaculis mi. Sed lacinia mauris leo, ut porttitor libero euismod ullamcorper. Integer eu arcu et augue consequat varius feugiat non odio. \",\r\n            story: [\r\n                {\r\n                    event: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. In aliquam iaculis ligula, ac bibendum magna tincidunt a. Nullam nec eleifend lectus. Quisque sollicitudin ultrices hendrerit. Etiam molestie nibh id mollis interdum. Donec hendrerit dignissim diam, nec cursus lectus ullamcorper finibus. ',\r\n                    time: '1849-05-16',\r\n                    effect: 'Positive',\r\n                    intensity: 2,\r\n                    title: 'Maecenas vitae',\r\n                    beforeColor: '#9EE09E',\r\n                    color: '#9EE09E'\r\n                },\r\n                {\r\n                    event: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. In aliquam iaculis ligula, ac bibendum magna tincidunt a. Nullam nec eleifend lectus. Quisque sollicitudin ultrices hendrerit. Etiam molestie nibh id mollis interdum. Donec hendrerit dignissim diam, nec cursus lectus ullamcorper finibus. ',\r\n                    time: '1858-07-09',\r\n                    effect: 'Positive',\r\n                    intensity: 3,\r\n                    title: 'Lorem ipsum dolor',\r\n                    beforeColor: '#9EE09E',\r\n                    color: '#9EE09E'\r\n                },\r\n                {\r\n                    event: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. In aliquam iaculis ligula, ac bibendum magna tincidunt a. Nullam nec eleifend lectus. Quisque sollicitudin ultrices hendrerit. Etiam molestie nibh id mollis interdum. Donec hendrerit dignissim diam, nec cursus lectus ullamcorper finibus. ',\r\n                    time: '1862-04-03',\r\n                    effect: 'Negative',\r\n                    intensity: 5,\r\n                    title: 'Maecenas vitae',\r\n                    beforeColor: '#9EE09E',\r\n                    color: '#FF6663'\r\n                },\r\n                {\r\n                    event: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. In aliquam iaculis ligula, ac bibendum magna tincidunt a. Nullam nec eleifend lectus. Quisque sollicitudin ultrices hendrerit. Etiam molestie nibh id mollis interdum. Donec hendrerit dignissim diam, nec cursus lectus ullamcorper finibus. ',\r\n                    time: '1862-06-13',\r\n                    effect: 'Positive',\r\n                    intensity: 3,\r\n                    title: 'Quisque sollicitudin',\r\n                    beforeColor: '#FF6663',\r\n                    color: '#9EE09E'\r\n                },\r\n                {\r\n                    event: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. In aliquam iaculis ligula, ac bibendum magna tincidunt a. Nullam nec eleifend lectus. Quisque sollicitudin ultrices hendrerit. Etiam molestie nibh id mollis interdum. Donec hendrerit dignissim diam, nec cursus lectus ullamcorper finibus. ',\r\n                    time: '1862-10-17',\r\n                    effect: 'Positive',\r\n                    intensity: 7,\r\n                    title: 'Nullam nec eleifend',\r\n                    beforeColor: '#9EE09E',\r\n                    color: '#9EE09E'\r\n                },\r\n\r\n            ],\r\n        },\r\n        {\r\n            abilities: \"Nullam nec eleifend lectus. Quisque sollicitudin ultrices hendrerit. Etiam molestie nibh id mollis interdum. Donec hendrerit dignissim diam, nec cursus lectus ullamcorper finibus. Maecenas vitae risus lobortis, facilisis turpis vitae, bibendum augue. \",\r\n            born: \"1708-15-16\",\r\n            characterD: \"Nullam porttitor, lorem ac fringilla pellentesque, nunc massa faucibus diam, vitae facilisis sem ligula condimentum nibh. Phasellus vehicula dui ac orci porta congue. Etiam gravida sem ut nulla laoreet sagittis. Phasellus tincidunt lorem ut viverra rhoncus. Nullam in neque at elit rhoncus facilisis non quis nunc. Praesent ultricies faucibus nisl. Vivamus porta viverra ligula, et ultrices quam laoreet nec. Integer venenatis nisi non aliquet tempus. Vestibulum justo magna, feugiat id molestie eget, condimentum eu arcu.\",\r\n            id: \"4d7jg2SQZ\",\r\n            live: \"Dragonstone\",\r\n            name: \"Stannis Baratheon\",\r\n            philosophy: \"In aliquam iaculis ligula, ac bibendum magna tincidunt a. Nullam nec eleifend lectus. Quisque sollicitudin ultrices hendrerit. Etiam molestie nibh id mollis interdum. Donec hendrerit dignissim diam, nec cursus lectus ullamcorper finibus. Maecenas vitae risus lobortis, facilisis turpis vitae, bibendum augue. \",\r\n            physicalD: \"Consectetur adipiscing elit. In aliquam iaculis ligula, ac bibendum magna tincidunt a. Nullam nec eleifend lectus. Quisque sollicitudin ultrices hendrerit. Etiam molestie nibh id mollis interdum. Donec hendrerit dignissim diam, nec cursus lectus ullamcorper finibus. Maecenas vitae risus lobortis, facilisis turpis vitae, bibendum augue. Pellentesque ac dui dapibus, convallis purus nec, euismod lacus. Quisque vitae volutpat diam, sit amet venenatis est. Maecenas non sem condimentum, rhoncus metus a, egestas orci.\",\r\n            story: [\r\n                {\r\n                    event: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. In aliquam iaculis ligula, ac bibendum magna tincidunt a. Nullam nec eleifend lectus. Quisque sollicitudin ultrices hendrerit. Etiam molestie nibh id mollis interdum. Donec hendrerit dignissim diam, nec cursus lectus ullamcorper finibus. ',\r\n                    time: '1749-03-11',\r\n                    effect: 'Negative',\r\n                    intensity: 1,\r\n                    title: 'Etiam molestie nibh',\r\n                    beforeColor: '#FF6663',\r\n                    color: '#FF6663'\r\n                },\r\n                {\r\n                    event: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. In aliquam iaculis ligula, ac bibendum magna tincidunt a. Nullam nec eleifend lectus. Quisque sollicitudin ultrices hendrerit. Etiam molestie nibh id mollis interdum. Donec hendrerit dignissim diam, nec cursus lectus ullamcorper finibus. ',\r\n                    time: '1758-07-10',\r\n                    effect: 'Negative',\r\n                    intensity: 3,\r\n                    title: 'Nullam nec eleifend',\r\n                    beforeColor: '#FF6663',\r\n                    color: '#FF6663'\r\n                },\r\n                {\r\n                    event: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. In aliquam iaculis ligula, ac bibendum magna tincidunt a. Nullam nec eleifend lectus. Quisque sollicitudin ultrices hendrerit. Etiam molestie nibh id mollis interdum. Donec hendrerit dignissim diam, nec cursus lectus ullamcorper finibus. ',\r\n                    time: '1762-04-13',\r\n                    effect: 'Negative',\r\n                    intensity: 1,\r\n                    title: 'Quisque sollicitudin ultrices',\r\n                    beforeColor: '#FF6663',\r\n                    color: '#FF6663'\r\n                },\r\n                {\r\n                    event: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. In aliquam iaculis ligula, ac bibendum magna tincidunt a. Nullam nec eleifend lectus. Quisque sollicitudin ultrices hendrerit. Etiam molestie nibh id mollis interdum. Donec hendrerit dignissim diam, nec cursus lectus ullamcorper finibus. ',\r\n                    time: '1767-06-18',\r\n                    effect: 'Positive',\r\n                    intensity: 7,\r\n                    title: 'Consectetur adipiscing',\r\n                    beforeColor: '#FF6663',\r\n                    color: '#9EE09E'\r\n                },\r\n                {\r\n                    event: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. In aliquam iaculis ligula, ac bibendum magna tincidunt a. Nullam nec eleifend lectus. Quisque sollicitudin ultrices hendrerit. Etiam molestie nibh id mollis interdum. Donec hendrerit dignissim diam, nec cursus lectus ullamcorper finibus. ',\r\n                    time: '1768-10-17',\r\n                    effect: 'Neutral',\r\n                    intensity: 2,\r\n                    title: 'In aliquam iaculis',\r\n                    beforeColor: '#9EE09E',\r\n                    color: '#CC99C9'\r\n                },\r\n            ],\r\n        },\r\n        {\r\n            abilities: \"Duis ultricies neque sed varius maximus. Sed faucibus vitae felis ac tempus. Aliquam eu eros sagittis libero pretium iaculis ac non libero. Vestibulum egestas nibh massa, vitae placerat nibh pulvinar in. In venenatis scelerisque augue, sed iaculis felis faucibus ullamcorper. Sed luctus ligula at pellentesque malesuada.\",\r\n            born: \"1719-15-16\",\r\n            characterD: \"Phasellus commodo nec felis et lacinia. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Mauris at accumsan dolor. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Vestibulum ultricies ante quis dolor gravida, at auctor leo vestibulum.\",\r\n            id: \"4d7jg2SQZ44\",\r\n            live: \"Winterfell\",\r\n            name: \"Eddard Stark\",\r\n            philosophy: \"Phasellus iaculis mattis purus. Quisque rutrum luctus mauris, eget finibus mauris. Etiam id nisi enim. Duis dictum velit sed ante semper commodo. Curabitur tristique pulvinar risus, quis dignissim ex porta sit amet. Praesent ac nunc ac lectus dignissim rutrum. Aenean pretium pellentesque lacus, at euismod risus viverra et. \",\r\n            physicalD: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. In aliquam iaculis ligula, ac bibendum magna tincidunt a. Nullam nec eleifend lectus. Quisque sollicitudin ultrices hendrerit. Etiam molestie nibh id mollis interdum. Donec hendrerit dignissim diam, nec cursus lectus ullamcorper finibus. Maecenas vitae risus lobortis, facilisis turpis vitae, bibendum augue. \",\r\n            story: [\r\n                {\r\n                    event: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. In aliquam iaculis ligula, ac bibendum magna tincidunt a. Nullam nec eleifend lectus. Quisque sollicitudin ultrices hendrerit. Etiam molestie nibh id mollis interdum. Donec hendrerit dignissim diam, nec cursus lectus ullamcorper finibus. ',\r\n                    time: '1749-03-11',\r\n                    effect: 'Negative',\r\n                    intensity: 0,\r\n                    title: 'Etiam molestie nibh',\r\n                    beforeColor: '#FF6663',\r\n                    color: '#FF6663'\r\n                },\r\n                {\r\n                    event: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. In aliquam iaculis ligula, ac bibendum magna tincidunt a. Nullam nec eleifend lectus. Quisque sollicitudin ultrices hendrerit. Etiam molestie nibh id mollis interdum. Donec hendrerit dignissim diam, nec cursus lectus ullamcorper finibus. ',\r\n                    time: '1758-07-10',\r\n                    effect: 'Negative',\r\n                    intensity: 8,\r\n                    title: 'Nullam nec eleifend',\r\n                    beforeColor: '#FF6663',\r\n                    color: '#FF6663'\r\n                },\r\n                {\r\n                    event: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. In aliquam iaculis ligula, ac bibendum magna tincidunt a. Nullam nec eleifend lectus. Quisque sollicitudin ultrices hendrerit. Etiam molestie nibh id mollis interdum. Donec hendrerit dignissim diam, nec cursus lectus ullamcorper finibus. ',\r\n                    time: '1762-04-13',\r\n                    effect: 'Negative',\r\n                    intensity: 9,\r\n                    title: 'Quisque sollicitudin ultrices',\r\n                    beforeColor: '#FF6663',\r\n                    color: '#FF6663'\r\n                },\r\n                {\r\n                    event: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. In aliquam iaculis ligula, ac bibendum magna tincidunt a. Nullam nec eleifend lectus. Quisque sollicitudin ultrices hendrerit. Etiam molestie nibh id mollis interdum. Donec hendrerit dignissim diam, nec cursus lectus ullamcorper finibus. ',\r\n                    time: '1767-06-18',\r\n                    effect: 'Positive',\r\n                    intensity: 10,\r\n                    title: 'Consectetur adipiscing',\r\n                    beforeColor: '#FF6663',\r\n                    color: '#9EE09E'\r\n                },\r\n                {\r\n                    event: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. In aliquam iaculis ligula, ac bibendum magna tincidunt a. Nullam nec eleifend lectus. Quisque sollicitudin ultrices hendrerit. Etiam molestie nibh id mollis interdum. Donec hendrerit dignissim diam, nec cursus lectus ullamcorper finibus. ',\r\n                    time: '1768-10-17',\r\n                    effect: 'Neutral',\r\n                    intensity: 5,\r\n                    title: 'In aliquam iaculis',\r\n                    beforeColor: '#9EE09E',\r\n                    color: '#CC99C9'\r\n                },\r\n                {\r\n                    event: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. In aliquam iaculis ligula, ac bibendum magna tincidunt a. Nullam nec eleifend lectus. Quisque sollicitudin ultrices hendrerit. Etiam molestie nibh id mollis interdum. Donec hendrerit dignissim diam, nec cursus lectus ullamcorper finibus. ',\r\n                    time: '1769-11-07',\r\n                    effect: 'Neutral',\r\n                    intensity: 2,\r\n                    title: 'Lectus ullamcorper',\r\n                    beforeColor: '#CC99C9',\r\n                    color: '#CC99C9'\r\n                },\r\n                {\r\n                    event: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. In aliquam iaculis ligula, ac bibendum magna tincidunt a. Nullam nec eleifend lectus. Quisque sollicitudin ultrices hendrerit. Etiam molestie nibh id mollis interdum. Donec hendrerit dignissim diam, nec cursus lectus ullamcorper finibus. ',\r\n                    time: '1772-04-12',\r\n                    effect: 'Positive',\r\n                    intensity: 6,\r\n                    title: 'Consectetur adipiscing',\r\n                    beforeColor: '#CC99C9',\r\n                    color: '#9EE09E'\r\n                },\r\n            ]\r\n        },\r\n    ]);\r\n    const [newStoryline, setNewStoryline] = useState({\r\n        event: '',\r\n        time: '',\r\n        effect: '',\r\n        intensity: '',\r\n        title: '',\r\n    })\r\n\r\n    function handleDrawerToggle() {\r\n        setMobileOpen(!mobileOpen);\r\n    }\r\n\r\n    function handleAddChar() {\r\n        setAddCharOpen(true);\r\n    }\r\n\r\n    const handleEditCharOpen = (i, index) => () => {\r\n        setEditCharOpen([true, index, { ...i }]);\r\n    }\r\n\r\n    function handleTrashOpen() {\r\n        setTrachOpen(true);\r\n    }\r\n\r\n    function handleClose() {\r\n        setAddCharOpen(false);\r\n        setTrachOpen(false);\r\n        setEditCharOpen([false]);\r\n    }\r\n\r\n    const handleDelete = (i, index) => () => {\r\n        const allInTrash = [...inTrash, i];\r\n        setInTrash(allInTrash);\r\n        const allChar = charactersInfo.filter(char => charactersInfo.indexOf(char) !== index);\r\n        setCharactersInfo(allChar);\r\n        const a = { open: true, char: i, index: index };\r\n        setConfirmDelOpen(a);\r\n        setDeleted(i);\r\n    }\r\n\r\n    const handleSelectChar = (i) => () => {\r\n        setSelectChar(i);\r\n        setAddStoryline(false);\r\n        setCharactersOverview(false);\r\n        setNewStoryline({\r\n            event: '',\r\n            time: '',\r\n            effect: '',\r\n            intensity: '',\r\n            title: '',\r\n        });\r\n    }\r\n\r\n    const handleCharactersOverview = () => {\r\n        setCharactersOverview(true);\r\n        setSelectChar({});\r\n        setMobileOpen(false);\r\n    }\r\n\r\n    const drawer = (\r\n        <div>\r\n            <div className={classes.toolbar}>\r\n            </div>\r\n            <List>\r\n                <ListItem button onClick={handleCharactersOverview}>\r\n                    <ListItemText primary='Storylines overview' />\r\n                </ListItem>\r\n            </List>\r\n            <Divider className={classes.divider} />\r\n            <List>\r\n                {charactersInfo === null ? null : charactersInfo.map((i, index) => (\r\n                    <ListItem button key={i.id} onClick={handleSelectChar(i)}>\r\n                        <ListItemText primary={i.name} className={classes.listItem} />\r\n                        { i.id !== selectChar.id ? null :\r\n                            <>\r\n\r\n                                <Tooltip title=\"Edit\">\r\n                                    <IconButton aria-label=\"Edit\" onClick={handleEditCharOpen(i, index)}>\r\n                                        <Icon>edit_icon</Icon>\r\n                                    </IconButton>\r\n                                </Tooltip>\r\n                                <Tooltip title=\"Delete\">\r\n                                    <IconButton aria-label=\"Delete\" onClick={handleDelete(i, index)}>\r\n                                        <DeleteIcon />\r\n                                    </IconButton>\r\n                                </Tooltip>\r\n\r\n\r\n\r\n                            </>\r\n                        }\r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n            <Divider />\r\n            <List>\r\n                {['Add Character', 'Trash'].map((text, index) => (\r\n                    <ListItem button key={index} onClick={index === 0 ? handleAddChar : handleTrashOpen}>\r\n                        <ListItemIcon>{index === 0 ?\r\n                            <AddCircle />\r\n                            : <DeleteIcon />}</ListItemIcon>\r\n                        <ListItemText primary={text} />\r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar position=\"fixed\" className={classes.appBar}>\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"Open drawer\"\r\n                        edge=\"start\"\r\n                        onClick={handleDrawerToggle}\r\n                        className={classes.menuButton}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" noWrap>\r\n                        Book Planner\r\n          </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <nav className={classes.drawer}>\r\n                <Hidden smUp implementation=\"css\">\r\n                    <Drawer\r\n                        container={container}\r\n                        variant=\"temporary\"\r\n                        anchor={theme.direction === 'rtl' ? 'right' : 'left'}\r\n                        open={mobileOpen}\r\n                        onClose={handleDrawerToggle}\r\n                        classes={{\r\n                            paper: classes.drawerPaper,\r\n                        }}\r\n                        ModalProps={{\r\n                            keepMounted: true, // Better open performance on mobile.\r\n                        }}\r\n                    >\r\n                        {drawer}\r\n                    </Drawer>\r\n                </Hidden>\r\n                <Hidden xsDown implementation=\"css\">\r\n                    <Drawer\r\n                        classes={{\r\n                            paper: classes.drawerPaper,\r\n                        }}\r\n                        variant=\"permanent\"\r\n                        open\r\n                    >\r\n                        {drawer}\r\n                    </Drawer>\r\n                </Hidden>\r\n            </nav>\r\n            <main className={classes.content}>\r\n                <AddCharacter\r\n                    addCharOpen={addCharOpen}\r\n                    handleClose={handleClose}\r\n                    setCharactersInfo={setCharactersInfo}\r\n                    charactersInfo={charactersInfo}\r\n                />\r\n                <Trash\r\n                    handleClose={handleClose}\r\n                    trashOpen={trashOpen}\r\n                    inTrash={inTrash}\r\n                    setInTrash={setInTrash}\r\n                    charactersInfo={charactersInfo}\r\n                    setCharactersInfo={setCharactersInfo}\r\n                    setDeleted={setDeleted}\r\n                />\r\n                <ConfirmDel\r\n                    confirmDelOpen={confirmDelOpen}\r\n                    setConfirmDelOpen={setConfirmDelOpen}\r\n                    inTrash={inTrash}\r\n                    setInTrash={setInTrash}\r\n                    charactersInfo={charactersInfo}\r\n                    setCharactersInfo={setCharactersInfo}\r\n                    setDeleted={setDeleted}\r\n                    setCharactersOverview={setCharactersOverview}\r\n                />\r\n                <EditCharacter\r\n                    editCharOpen={editCharOpen}\r\n                    handleClose={handleClose}\r\n                    charactersInfo={charactersInfo}\r\n                    setCharactersInfo={setCharactersInfo}\r\n                    setSelectChar={setSelectChar}\r\n\r\n                />\r\n                <div className={classes.toolbar} />\r\n                <CharInfoDisplay\r\n                    selectChar={selectChar}\r\n                    addStoryline={addStoryline}\r\n                    setAddStoryline={setAddStoryline}\r\n                    newStoryline={newStoryline}\r\n                    setNewStoryline={setNewStoryline}\r\n                    charactersInfo={charactersInfo}\r\n                    setCharactersInfo={setCharactersInfo}\r\n                    deleted={deleted}\r\n                    setCharactersOverview={setCharactersOverview}\r\n                />\r\n                <CharactersOverview\r\n                    charactersOverview={charactersOverview}\r\n                    charactersInfo={charactersInfo}\r\n                    setSelectChar={setSelectChar}\r\n                    setCharactersOverview={setCharactersOverview}\r\n                />\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default CustomNav;\r\n","import React from 'react';\nimport './App.css';\nimport CustomNav from './components/CustomNav';\n\nfunction App() {\n  return (\n    <div>\n      <CustomNav />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}